options:
  parameters:
    author: Alyse Jones and William "Chris" Headley
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: ofdm_txrx_sensing
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: OFDM End-to-End Stream Testing (with GUI)
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 4.0]
    rotation: 0
    state: enabled

blocks:
- name: back_pad
  id: variable
  parameters:
    comment: ''
    value: num_zeros
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 204.0]
    rotation: 0
    state: enabled
- name: block_size
  id: variable
  parameters:
    comment: ''
    value: int((front_pad+back_pad+80+800)*(wide_samp_rate/(1e6))/num_channels)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 76.0]
    rotation: 0
    state: enabled
- name: cent_freq
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 268.0]
    rotation: 0
    state: enabled
- name: channel_map
  id: variable
  parameters:
    comment: ''
    value: '[int(num_channels/2) + i*1 if i < int(num_channels/2) else -int(num_channels/2)+i*1
      for i in range(num_channels)]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248, 140.0]
    rotation: 0
    state: true
- name: fft_len
  id: variable
  parameters:
    comment: ''
    value: int(64)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 140.0]
    rotation: 0
    state: true
- name: front_pad
  id: variable
  parameters:
    comment: ''
    value: num_zeros
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 204.0]
    rotation: 0
    state: enabled
- name: head_size
  id: variable
  parameters:
    comment: ''
    value: int((front_pad+back_pad+num_samps)*(wide_samp_rate/(signal_samp_rate))*time_steps)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 140.0]
    rotation: 0
    state: enabled
- name: noise_volt
  id: variable
  parameters:
    comment: ''
    value: pow(1.0/(fft_len*2*pow(10.0,snr/10.0)),0.5)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248, 76.0]
    rotation: 0
    state: enabled
- name: num_channels
  id: variable
  parameters:
    comment: ''
    value: '8'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 140.0]
    rotation: 0
    state: true
- name: num_data_symbs
  id: variable
  parameters:
    comment: ''
    value: '7'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 76.0]
    rotation: 0
    state: enabled
- name: num_header_symbs
  id: variable
  parameters:
    comment: ''
    value: '3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 140.0]
    rotation: 0
    state: enabled
- name: num_samps
  id: variable
  parameters:
    comment: ''
    value: num_data_symbs*80+num_header_symbs*80
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 204.0]
    rotation: 0
    state: enabled
- name: num_samps_per_step
  id: variable
  parameters:
    comment: ''
    value: head_size/time_steps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 204.0]
    rotation: 0
    state: enabled
- name: num_zeros
  id: variable
  parameters:
    comment: ''
    value: '1800'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 268.0]
    rotation: 0
    state: enabled
- name: rand_seed
  id: variable
  parameters:
    comment: ''
    value: int(time.time())
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 76.0]
    rotation: 0
    state: true
- name: samps_per_symb
  id: variable
  parameters:
    comment: ''
    value: float(wide_samp_rate/signal_samp_rate)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1360, 76.0]
    rotation: 0
    state: true
- name: signal_samp_rate
  id: variable
  parameters:
    comment: ''
    value: 1e6/10
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [398, 138]
    rotation: 0
    state: true
- name: snr
  id: variable
  parameters:
    comment: ''
    value: '20'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 140.0]
    rotation: 0
    state: true
- name: taps
  id: variable
  parameters:
    comment: ''
    value: firdes.low_pass_2(1.0,1,(1/32)-0.01,0.01,80,window.WIN_BLACKMAN_HARRIS)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 76.0]
    rotation: 0
    state: enabled
- name: time_steps
  id: variable
  parameters:
    comment: ''
    value: '10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 204.0]
    rotation: 0
    state: enabled
- name: wide_samp_rate
  id: variable
  parameters:
    comment: ''
    value: 32e6/10
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [399, 77]
    rotation: 0
    state: true
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: num_channels
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 940.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: ../data/rx_bits.dat
    type: byte
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1832, 652.0]
    rotation: 0
    state: true
- name: blocks_file_sink_0_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: ../data/rx_bits.dat
    type: byte
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 652.0]
    rotation: 180
    state: true
- name: blocks_head_0
  id: blocks_head
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: head_size
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 548.0]
    rotation: 0
    state: true
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1496, 944.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '3.6'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1256, 668.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_1
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: 1/20
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [728, 548.0]
    rotation: 0
    state: true
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1600, 752.0]
    rotation: 180
    state: true
- name: blocks_null_sink_0_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 608.0]
    rotation: 0
    state: true
- name: blocks_streams_to_vector_0
  id: blocks_streams_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: num_channels
    type: complex
    vlen: '1'
  states:
    bus_sink: true
    bus_source: false
    bus_structure: null
    coordinate: [760, 932.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport pmt\nimport numpy\
      \ as np\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self,num_channels=8,wide_samp_rate=2e6):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Freq Control',   # will show up in GRC\n      \
      \      in_sig=[np.complex64],\n            out_sig = []\n        )\n       \
      \ # if an attribute with the same name as a parameter is found,\n        # a\
      \ callback is registered (properties work, too).\n        self.num_channels\
      \ = num_channels\n        self.wide_samp_rate = wide_samp_rate\n        self.samp_rate\
      \ = int(self.wide_samp_rate/(1e6))\n        self.msg_port_name_tx = 'tx_cent_freq'\n\
      \        self.msg_port_name_rx = 'rx_cent_freq'\n        self.message_port_register_out(pmt.intern(self.msg_port_name_rx))\n\
      \        self.message_port_register_out(pmt.intern(self.msg_port_name_tx))\n\
      \        self.cent_freqs = np.arange(int(-(self.samp_rate/2)+1),int(self.samp_rate/2),1/8)\n\
      \        self.position = 0\n        self.count = 0\n\n    def work(self, input_items,\
      \ output_items):\n        tag_tuple = self.get_tags_in_window(0, 0, len(input_items[0]))\n\
      \n        for tag in tag_tuple:\n            if (pmt.to_python(tag.key) == 'packet_len'):\n\
      \                cent_freq = self.cent_freqs[self.position]*1e6\n          \
      \      self.position += 1\n                self.count += 1\n               \
      \ print(self.count)\n                if self.position == len(self.cent_freqs):\n\
      \                    self.position = 0\n                PMT_msg_tx =  pmt.dict_add(pmt.make_dict(),\
      \ pmt.intern(\"freq\"), pmt.from_float(cent_freq))\n                PMT_msg_rx\
      \ =  pmt.dict_add(pmt.make_dict(), pmt.intern(\"freq\"), pmt.from_float(-cent_freq))\n\
      \                self.message_port_pub(pmt.intern(self.msg_port_name_tx), PMT_msg_tx)\n\
      \                self.message_port_pub(pmt.intern(self.msg_port_name_rx), PMT_msg_rx)\n\
      \        \n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_channels: num_channels
    wide_samp_rate: wide_samp_rate
  states:
    _io_cache: ('Freq Control', 'blk', [('num_channels', '8'), ('wide_samp_rate',
      '2000000.0')], [('0', 'complex', 1)], [('tx_cent_freq', 'message', 1), ('rx_cent_freq',
      'message', 1)], 'Embedded Python Block example - a simple multiply const', ['num_channels',
      'wide_samp_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696.0, 680]
    rotation: 270
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self, num_chans=8):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Embedded Python Block',   # will show up in GRC\n\
      \            in_sig=[(np.float32,num_chans)],\n            out_sig=None\n  \
      \      )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.num_chans\
      \ = num_chans\n        self.energy_vect = np.zeros(self.num_chans)\n       \
      \ self.start_flag = 0\n        self.end_flag = 0\n        self.num_samps = 0\n\
      \        \n        self.portName = 'energy_vec'\n        self.message_port_register_out(pmt.intern(self.portName))\n\
      \    \n    def work(self, input_items, output_items):\n        tagTuple = self.get_tags_in_window(0,\
      \ 0, len(input_items[0]))\n                \n        start_index = 0\n     \
      \   end_index = len(input_items[0])\n        for tag in tagTuple:\n        \
      \    if (pmt.to_python(tag.key) == 'burst_start') and ~start_index:\n      \
      \          self.energy_vect = np.zeros(self.num_chans)\n                start_index\
      \ = tag.offset - self.nitems_read(0)\n                self.start_flag = 1\n\
      \            if (pmt.to_python(tag.key) == 'burst_end') and ~end_index:\n  \
      \              end_index = tag.offset - self.nitems_read(0)\n              \
      \  self.end_flag = 1\n                             \n        if self.start_flag\
      \ == 1:\n            for i in range(start_index,end_index):\n              \
      \  self.energy_vect += input_items[0][i]\n                self.num_samps +=\
      \ 1\n            \n        if self.end_flag == 1:\n            print('Num Samps:\
      \ ' + str(self.num_samps))\n            self.message_port_pub(pmt.intern(self.portName),\
      \ pmt.to_pmt(self.energy_vect/self.num_samps))\n            self.start_flag\
      \ = 0\n            self.end_flag = 0\n            self.num_samps = 0\n     \
      \   \n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_chans: num_channels
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('num_chans', '8')], [('0', 'float',
      8)], [('energy_vec', 'message', 1)], 'Embedded Python Block example - a simple
      multiply const', ['num_chans'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 940.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from math import sqrt
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 100.0]
    rotation: 0
    state: enabled
- name: import_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from math import erfc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 148.0]
    rotation: 0
    state: true
- name: import_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from math import log10
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 196.0]
    rotation: 0
    state: enabled
- name: import_0_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import time
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 244.0]
    rotation: 0
    state: enabled
- name: note_0_0_0_0
  id: note
  parameters:
    alias: ''
    comment: ''
    note: Tunable Variables
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 20.0]
    rotation: 0
    state: true
- name: note_0_0_1
  id: note
  parameters:
    alias: ''
    comment: ''
    note: Fixed Variables
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [936, 20.0]
    rotation: 0
    state: true
- name: note_0_1
  id: note
  parameters:
    alias: ''
    comment: ''
    note: Derived Variables
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 20.0]
    rotation: 0
    state: true
- name: ofdm_rx_hier_0
  id: ofdm_rx_hier
  parameters:
    affinity: ''
    alias: ''
    cent_freq: -cent_freq
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    signal_samp_rate: signal_samp_rate
    wide_samp_rate: wide_samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1488, 668.0]
    rotation: 0
    state: enabled
- name: ofdm_tx_hier_0
  id: ofdm_tx_hier
  parameters:
    affinity: ''
    alias: ''
    back_pad: back_pad
    cent_freq: cent_freq
    comment: ''
    front_pad: front_pad
    maxoutbuf: '0'
    minoutbuf: '0'
    signal_samp_rate: signal_samp_rate
    wide_samp_rate: wide_samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 532.0]
    rotation: 0
    state: true
- name: pfb_channelizer_ccf_1_0
  id: pfb_channelizer_ccf
  parameters:
    affinity: ''
    alias: ''
    atten: '80'
    bus_structure_source: ''
    ch_map: channel_map
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    nchans: num_channels
    osr: '1'
    samp_delay: '0'
    taps: firdes.low_pass_2(1.0,1,1/num_channels/2,(1/num_channels)*0.1,80,window.WIN_BLACKMAN_HARRIS)
  states:
    bus_sink: false
    bus_source: true
    bus_structure: null
    coordinate: [448, 916.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: 2,1,1,1
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Transmitted OFDM Burst"'
    nconnections: '1'
    size: int(head_size/time_steps)
    srate: wide_samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '64'
    ymin: '-64'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1528, 444.0]
    rotation: 0
    state: enabled
- name: uhd_usrp_sink_0
  id: uhd_usrp_sink
  parameters:
    affinity: ''
    alias: ''
    ant0: '"TX/RX"'
    ant1: '"TX/RX"'
    ant10: '"TX/RX"'
    ant11: '"TX/RX"'
    ant12: '"TX/RX"'
    ant13: '"TX/RX"'
    ant14: '"TX/RX"'
    ant15: '"TX/RX"'
    ant16: '"TX/RX"'
    ant17: '"TX/RX"'
    ant18: '"TX/RX"'
    ant19: '"TX/RX"'
    ant2: '"TX/RX"'
    ant20: '"TX/RX"'
    ant21: '"TX/RX"'
    ant22: '"TX/RX"'
    ant23: '"TX/RX"'
    ant24: '"TX/RX"'
    ant25: '"TX/RX"'
    ant26: '"TX/RX"'
    ant27: '"TX/RX"'
    ant28: '"TX/RX"'
    ant29: '"TX/RX"'
    ant3: '"TX/RX"'
    ant30: '"TX/RX"'
    ant31: '"TX/RX"'
    ant4: '"TX/RX"'
    ant5: '"TX/RX"'
    ant6: '"TX/RX"'
    ant7: '"TX/RX"'
    ant8: '"TX/RX"'
    ant9: '"TX/RX"'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: 2.35e9
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dev_addr: addr=192.168.2.4
    dev_args: ''
    gain0: '60'
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    gain_type0: default
    gain_type1: default
    gain_type10: default
    gain_type11: default
    gain_type12: default
    gain_type13: default
    gain_type14: default
    gain_type15: default
    gain_type16: default
    gain_type17: default
    gain_type18: default
    gain_type19: default
    gain_type2: default
    gain_type20: default
    gain_type21: default
    gain_type22: default
    gain_type23: default
    gain_type24: default
    gain_type25: default
    gain_type26: default
    gain_type27: default
    gain_type28: default
    gain_type29: default
    gain_type3: default
    gain_type30: default
    gain_type31: default
    gain_type4: default
    gain_type5: default
    gain_type6: default
    gain_type7: default
    gain_type8: default
    gain_type9: default
    len_tag_name: '""'
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    otw: ''
    samp_rate: wide_samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[]'
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 492.0]
    rotation: 0
    state: enabled
- name: uhd_usrp_source_0_0
  id: uhd_usrp_source
  parameters:
    affinity: ''
    alias: ''
    ant0: '"RX2"'
    ant1: '"RX2"'
    ant10: '"RX2"'
    ant11: '"RX2"'
    ant12: '"RX2"'
    ant13: '"RX2"'
    ant14: '"RX2"'
    ant15: '"RX2"'
    ant16: '"RX2"'
    ant17: '"RX2"'
    ant18: '"RX2"'
    ant19: '"RX2"'
    ant2: '"RX2"'
    ant20: '"RX2"'
    ant21: '"RX2"'
    ant22: '"RX2"'
    ant23: '"RX2"'
    ant24: '"RX2"'
    ant25: '"RX2"'
    ant26: '"RX2"'
    ant27: '"RX2"'
    ant28: '"RX2"'
    ant29: '"RX2"'
    ant3: '"RX2"'
    ant30: '"RX2"'
    ant31: '"RX2"'
    ant4: '"RX2"'
    ant5: '"RX2"'
    ant6: '"RX2"'
    ant7: '"RX2"'
    ant8: '"RX2"'
    ant9: '"RX2"'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: 2.35e9
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dc_offs0: 0+0j
    dc_offs1: 0+0j
    dc_offs10: 0+0j
    dc_offs11: 0+0j
    dc_offs12: 0+0j
    dc_offs13: 0+0j
    dc_offs14: 0+0j
    dc_offs15: 0+0j
    dc_offs16: 0+0j
    dc_offs17: 0+0j
    dc_offs18: 0+0j
    dc_offs19: 0+0j
    dc_offs2: 0+0j
    dc_offs20: 0+0j
    dc_offs21: 0+0j
    dc_offs22: 0+0j
    dc_offs23: 0+0j
    dc_offs24: 0+0j
    dc_offs25: 0+0j
    dc_offs26: 0+0j
    dc_offs27: 0+0j
    dc_offs28: 0+0j
    dc_offs29: 0+0j
    dc_offs3: 0+0j
    dc_offs30: 0+0j
    dc_offs31: 0+0j
    dc_offs4: 0+0j
    dc_offs5: 0+0j
    dc_offs6: 0+0j
    dc_offs7: 0+0j
    dc_offs8: 0+0j
    dc_offs9: 0+0j
    dc_offs_enb0: default
    dc_offs_enb1: default
    dc_offs_enb10: default
    dc_offs_enb11: default
    dc_offs_enb12: default
    dc_offs_enb13: default
    dc_offs_enb14: default
    dc_offs_enb15: default
    dc_offs_enb16: default
    dc_offs_enb17: default
    dc_offs_enb18: default
    dc_offs_enb19: default
    dc_offs_enb2: default
    dc_offs_enb20: default
    dc_offs_enb21: default
    dc_offs_enb22: default
    dc_offs_enb23: default
    dc_offs_enb24: default
    dc_offs_enb25: default
    dc_offs_enb26: default
    dc_offs_enb27: default
    dc_offs_enb28: default
    dc_offs_enb29: default
    dc_offs_enb3: default
    dc_offs_enb30: default
    dc_offs_enb31: default
    dc_offs_enb4: default
    dc_offs_enb5: default
    dc_offs_enb6: default
    dc_offs_enb7: default
    dc_offs_enb8: default
    dc_offs_enb9: default
    dev_addr: addr=192.168.1.4
    dev_args: ''
    gain0: '60'
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    gain_type0: default
    gain_type1: default
    gain_type10: default
    gain_type11: default
    gain_type12: default
    gain_type13: default
    gain_type14: default
    gain_type15: default
    gain_type16: default
    gain_type17: default
    gain_type18: default
    gain_type19: default
    gain_type2: default
    gain_type20: default
    gain_type21: default
    gain_type22: default
    gain_type23: default
    gain_type24: default
    gain_type25: default
    gain_type26: default
    gain_type27: default
    gain_type28: default
    gain_type29: default
    gain_type3: default
    gain_type30: default
    gain_type31: default
    gain_type4: default
    gain_type5: default
    gain_type6: default
    gain_type7: default
    gain_type8: default
    gain_type9: default
    iq_imbal0: 0+0j
    iq_imbal1: 0+0j
    iq_imbal10: 0+0j
    iq_imbal11: 0+0j
    iq_imbal12: 0+0j
    iq_imbal13: 0+0j
    iq_imbal14: 0+0j
    iq_imbal15: 0+0j
    iq_imbal16: 0+0j
    iq_imbal17: 0+0j
    iq_imbal18: 0+0j
    iq_imbal19: 0+0j
    iq_imbal2: 0+0j
    iq_imbal20: 0+0j
    iq_imbal21: 0+0j
    iq_imbal22: 0+0j
    iq_imbal23: 0+0j
    iq_imbal24: 0+0j
    iq_imbal25: 0+0j
    iq_imbal26: 0+0j
    iq_imbal27: 0+0j
    iq_imbal28: 0+0j
    iq_imbal29: 0+0j
    iq_imbal3: 0+0j
    iq_imbal30: 0+0j
    iq_imbal31: 0+0j
    iq_imbal4: 0+0j
    iq_imbal5: 0+0j
    iq_imbal6: 0+0j
    iq_imbal7: 0+0j
    iq_imbal8: 0+0j
    iq_imbal9: 0+0j
    iq_imbal_enb0: default
    iq_imbal_enb1: default
    iq_imbal_enb10: default
    iq_imbal_enb11: default
    iq_imbal_enb12: default
    iq_imbal_enb13: default
    iq_imbal_enb14: default
    iq_imbal_enb15: default
    iq_imbal_enb16: default
    iq_imbal_enb17: default
    iq_imbal_enb18: default
    iq_imbal_enb19: default
    iq_imbal_enb2: default
    iq_imbal_enb20: default
    iq_imbal_enb21: default
    iq_imbal_enb22: default
    iq_imbal_enb23: default
    iq_imbal_enb24: default
    iq_imbal_enb25: default
    iq_imbal_enb26: default
    iq_imbal_enb27: default
    iq_imbal_enb28: default
    iq_imbal_enb29: default
    iq_imbal_enb3: default
    iq_imbal_enb30: default
    iq_imbal_enb31: default
    iq_imbal_enb4: default
    iq_imbal_enb5: default
    iq_imbal_enb6: default
    iq_imbal_enb7: default
    iq_imbal_enb8: default
    iq_imbal_enb9: default
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    otw: ''
    rx_agc0: Enabled
    rx_agc1: Default
    rx_agc10: Default
    rx_agc11: Default
    rx_agc12: Default
    rx_agc13: Default
    rx_agc14: Default
    rx_agc15: Default
    rx_agc16: Default
    rx_agc17: Default
    rx_agc18: Default
    rx_agc19: Default
    rx_agc2: Default
    rx_agc20: Default
    rx_agc21: Default
    rx_agc22: Default
    rx_agc23: Default
    rx_agc24: Default
    rx_agc25: Default
    rx_agc26: Default
    rx_agc27: Default
    rx_agc28: Default
    rx_agc29: Default
    rx_agc3: Default
    rx_agc30: Default
    rx_agc31: Default
    rx_agc4: Default
    rx_agc5: Default
    rx_agc6: Default
    rx_agc7: Default
    rx_agc8: Default
    rx_agc9: Default
    samp_rate: wide_samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[]'
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 628.0]
    rotation: 0
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: sensing_stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1192, 436.0]
    rotation: 0
    state: enabled
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: sensing_stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 940.0]
    rotation: 0
    state: enabled

connections:
- [blocks_complex_to_mag_squared_0, '0', epy_block_1, '0']
- [blocks_head_0, '0', uhd_usrp_sink_0, '0']
- [blocks_head_0, '0', virtual_sink_0, '0']
- [blocks_multiply_const_vxx_0, '0', ofdm_rx_hier_0, '0']
- [blocks_multiply_const_vxx_1, '0', blocks_head_0, '0']
- [blocks_streams_to_vector_0, '0', blocks_complex_to_mag_squared_0, '0']
- [epy_block_0, rx_cent_freq, ofdm_rx_hier_0, cent_freq]
- [epy_block_0, tx_cent_freq, ofdm_tx_hier_0, cent_freq]
- [epy_block_1, energy_vec, blocks_message_debug_0, print]
- [ofdm_rx_hier_0, '0', blocks_file_sink_0, '0']
- [ofdm_rx_hier_0, '0', blocks_null_sink_0, '0']
- [ofdm_tx_hier_0, '0', blocks_multiply_const_vxx_1, '0']
- [ofdm_tx_hier_0, '0', epy_block_0, '0']
- [ofdm_tx_hier_0, '1', blocks_file_sink_0_0, '0']
- [ofdm_tx_hier_0, '1', blocks_null_sink_0_0, '0']
- [pfb_channelizer_ccf_1_0, '8', blocks_streams_to_vector_0, '8']
- [uhd_usrp_source_0_0, '0', blocks_multiply_const_vxx_0, '0']
- [uhd_usrp_source_0_0, '0', qtgui_time_sink_x_0_0, '0']
- [virtual_source_0, '0', pfb_channelizer_ccf_1_0, '0']

metadata:
  file_format: 1
  grc_version: 3.9.6.0-rc1
