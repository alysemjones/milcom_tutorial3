options:
  parameters:
    author: Alyse Jones and William "Chris" Headley
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: ofdm_txrx_sensing
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: OFDM End-to-End Stream Testing (with GUI)
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 4.0]
    rotation: 0
    state: enabled

blocks:
- name: back_pad
  id: variable
  parameters:
    comment: ''
    value: '500'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 204.0]
    rotation: 0
    state: enabled
- name: block_size
  id: variable
  parameters:
    comment: ''
    value: int((front_pad+back_pad+80+800)*(wide_samp_rate/(1e6))/num_channels)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 76.0]
    rotation: 0
    state: enabled
- name: cent_freq
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 268.0]
    rotation: 0
    state: enabled
- name: channel_map
  id: variable
  parameters:
    comment: ''
    value: '[int(num_channels/2) + i*1 if i < int(num_channels/2) else -int(num_channels/2)+i*1
      for i in range(num_channels)]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248, 140.0]
    rotation: 0
    state: true
- name: fft_len
  id: variable
  parameters:
    comment: ''
    value: int(64)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 140.0]
    rotation: 0
    state: true
- name: front_pad
  id: variable
  parameters:
    comment: ''
    value: '500'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 204.0]
    rotation: 0
    state: enabled
- name: head_size
  id: variable
  parameters:
    comment: ''
    value: int((front_pad+back_pad+num_samps)*(wide_samp_rate/(1e6))*time_steps)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 140.0]
    rotation: 0
    state: enabled
- name: noise_volt
  id: variable
  parameters:
    comment: ''
    value: pow(1.0/(fft_len*2*pow(10.0,snr/10.0)),0.5)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248, 76.0]
    rotation: 0
    state: enabled
- name: num_channels
  id: variable
  parameters:
    comment: ''
    value: '8'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 140.0]
    rotation: 0
    state: true
- name: num_data_symbs
  id: variable
  parameters:
    comment: ''
    value: '7'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 76.0]
    rotation: 0
    state: enabled
- name: num_header_symbs
  id: variable
  parameters:
    comment: ''
    value: '3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 140.0]
    rotation: 0
    state: enabled
- name: num_samps
  id: variable
  parameters:
    comment: ''
    value: num_data_symbs*80+num_header_symbs*80
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 204.0]
    rotation: 0
    state: enabled
- name: num_samps_per_step
  id: variable
  parameters:
    comment: ''
    value: head_size/time_steps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 204.0]
    rotation: 0
    state: enabled
- name: rand_seed
  id: variable
  parameters:
    comment: ''
    value: int(time.time())
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 76.0]
    rotation: 0
    state: true
- name: samps_per_symb
  id: variable
  parameters:
    comment: ''
    value: float(wide_samp_rate/signal_samp_rate)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1360, 76.0]
    rotation: 0
    state: true
- name: signal_samp_rate
  id: variable
  parameters:
    comment: ''
    value: 1e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [398, 138]
    rotation: 0
    state: true
- name: snr
  id: variable
  parameters:
    comment: ''
    value: '20'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 140.0]
    rotation: 0
    state: true
- name: taps
  id: variable
  parameters:
    comment: ''
    value: firdes.low_pass_2(1.0,1,(1/32)-0.01,0.01,80,window.WIN_BLACKMAN_HARRIS)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 76.0]
    rotation: 0
    state: enabled
- name: time_steps
  id: variable
  parameters:
    comment: ''
    value: '10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 204.0]
    rotation: 0
    state: enabled
- name: wide_samp_rate
  id: variable
  parameters:
    comment: ''
    value: 32e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [399, 77]
    rotation: 0
    state: true
- name: analog_noise_source_x_0
  id: analog_noise_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_type: analog.GR_GAUSSIAN
    seed: '0'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [952, 452.0]
    rotation: 0
    state: true
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 520.0]
    rotation: 0
    state: true
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: num_channels
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 940.0]
    rotation: 0
    state: enabled
- name: blocks_head_0
  id: blocks_head
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: head_size
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 548.0]
    rotation: 0
    state: true
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1496, 944.0]
    rotation: 0
    state: enabled
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1904, 536.0]
    rotation: 0
    state: true
- name: blocks_null_sink_0_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 608.0]
    rotation: 0
    state: true
- name: blocks_streams_to_vector_0
  id: blocks_streams_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: num_channels
    type: complex
    vlen: '1'
  states:
    bus_sink: true
    bus_source: false
    bus_structure: null
    coordinate: [760, 932.0]
    rotation: 0
    state: enabled
- name: blocks_tag_gate_0
  id: blocks_tag_gate
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_tags: 'False'
    single_key: '""'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1312, 524.0]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: wide_samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [960, 548.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport pmt\nimport numpy\
      \ as np\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self,num_channels=8,wide_samp_rate=2e6):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Freq Control',   # will show up in GRC\n      \
      \      in_sig=[np.complex64],\n            out_sig = []\n        )\n       \
      \ # if an attribute with the same name as a parameter is found,\n        # a\
      \ callback is registered (properties work, too).\n        self.num_channels\
      \ = num_channels\n        self.wide_samp_rate = wide_samp_rate\n        self.samp_rate\
      \ = int(self.wide_samp_rate/(1e6))\n        self.msg_port_name_tx = 'tx_cent_freq'\n\
      \        self.msg_port_name_rx = 'rx_cent_freq'\n        self.message_port_register_out(pmt.intern(self.msg_port_name_rx))\n\
      \        self.message_port_register_out(pmt.intern(self.msg_port_name_tx))\n\
      \        self.cent_freqs = np.arange(int(-(self.samp_rate/2)+1),int(self.samp_rate/2),1/8)\n\
      \        self.position = 0\n\n    def work(self, input_items, output_items):\n\
      \        tag_tuple = self.get_tags_in_window(0, 0, len(input_items[0]))\n\n\
      \        for tag in tag_tuple:\n            if (pmt.to_python(tag.key) == 'packet_len'):\n\
      \                cent_freq = self.cent_freqs[self.position]*1e6\n          \
      \      self.position += 1\n                if self.position == len(self.cent_freqs):\n\
      \                    self.position = 0\n                PMT_msg_tx =  pmt.dict_add(pmt.make_dict(),\
      \ pmt.intern(\"freq\"), pmt.from_float(cent_freq))\n                PMT_msg_rx\
      \ =  pmt.dict_add(pmt.make_dict(), pmt.intern(\"freq\"), pmt.from_float(-cent_freq))\n\
      \                self.message_port_pub(pmt.intern(self.msg_port_name_tx), PMT_msg_tx)\n\
      \                self.message_port_pub(pmt.intern(self.msg_port_name_rx), PMT_msg_rx)\n\
      \        \n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_channels: num_channels
    wide_samp_rate: wide_samp_rate
  states:
    _io_cache: ('Freq Control', 'blk', [('num_channels', '8'), ('wide_samp_rate',
      '2000000.0')], [('0', 'complex', 1)], [('tx_cent_freq', 'message', 1), ('rx_cent_freq',
      'message', 1)], 'Embedded Python Block example - a simple multiply const', ['num_channels',
      'wide_samp_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696.0, 672]
    rotation: 270
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self, num_chans=8):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Embedded Python Block',   # will show up in GRC\n\
      \            in_sig=[(np.float32,num_chans)],\n            out_sig=None\n  \
      \      )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.num_chans\
      \ = num_chans\n        self.energy_vect = np.zeros(self.num_chans)\n       \
      \ self.start_flag = 0\n        self.end_flag = 0\n        self.num_samps = 0\n\
      \        \n        self.portName = 'energy_vec'\n        self.message_port_register_out(pmt.intern(self.portName))\n\
      \    \n    def work(self, input_items, output_items):\n        tagTuple = self.get_tags_in_window(0,\
      \ 0, len(input_items[0]))\n                \n        start_index = 0\n     \
      \   end_index = len(input_items[0])\n        for tag in tagTuple:\n        \
      \    if (pmt.to_python(tag.key) == 'burst_start') and ~start_index:\n      \
      \          self.energy_vect = np.zeros(self.num_chans)\n                start_index\
      \ = tag.offset - self.nitems_read(0)\n                self.start_flag = 1\n\
      \            if (pmt.to_python(tag.key) == 'burst_end') and ~end_index:\n  \
      \              end_index = tag.offset - self.nitems_read(0)\n              \
      \  self.end_flag = 1\n                             \n        if self.start_flag\
      \ == 1:\n            for i in range(start_index,end_index):\n              \
      \  self.energy_vect += input_items[0][i]\n                self.num_samps +=\
      \ 1\n            \n        if self.end_flag == 1:\n            print('Num Samps:\
      \ ' + str(self.num_samps))\n            self.message_port_pub(pmt.intern(self.portName),\
      \ pmt.to_pmt(self.energy_vect/self.num_samps))\n            self.start_flag\
      \ = 0\n            self.end_flag = 0\n            self.num_samps = 0\n     \
      \   \n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_chans: num_channels
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('num_chans', '8')], [('0', 'float',
      8)], [('energy_vec', 'message', 1)], 'Embedded Python Block example - a simple
      multiply const', ['num_chans'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 940.0]
    rotation: 0
    state: enabled
- name: fosphor_qt_sink_c_0
  id: fosphor_qt_sink_c
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    freq_center: '0'
    freq_span: wide_samp_rate
    gui_hint: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1312, 396.0]
    rotation: 0
    state: disabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from math import sqrt
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 100.0]
    rotation: 0
    state: enabled
- name: import_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from math import erfc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 148.0]
    rotation: 0
    state: true
- name: import_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from math import log10
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 196.0]
    rotation: 0
    state: enabled
- name: import_0_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import time
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 244.0]
    rotation: 0
    state: enabled
- name: note_0_0_0_0
  id: note
  parameters:
    alias: ''
    comment: ''
    note: Tunable Variables
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 20.0]
    rotation: 0
    state: true
- name: note_0_0_1
  id: note
  parameters:
    alias: ''
    comment: ''
    note: Fixed Variables
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [936, 20.0]
    rotation: 0
    state: true
- name: note_0_1
  id: note
  parameters:
    alias: ''
    comment: ''
    note: Derived Variables
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 20.0]
    rotation: 0
    state: true
- name: ofdm_rx_hier_0
  id: ofdm_rx_hier
  parameters:
    affinity: ''
    alias: ''
    cent_freq: -cent_freq
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    signal_samp_rate: signal_samp_rate
    wide_samp_rate: wide_samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1584, 532.0]
    rotation: 0
    state: enabled
- name: ofdm_tx_hier_0
  id: ofdm_tx_hier
  parameters:
    affinity: ''
    alias: ''
    back_pad: back_pad
    cent_freq: cent_freq
    comment: ''
    front_pad: front_pad
    maxoutbuf: '0'
    minoutbuf: '0'
    signal_samp_rate: signal_samp_rate
    wide_samp_rate: wide_samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 532.0]
    rotation: 0
    state: true
- name: pfb_channelizer_ccf_1_0
  id: pfb_channelizer_ccf
  parameters:
    affinity: ''
    alias: ''
    atten: '80'
    bus_structure_source: ''
    ch_map: channel_map
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    nchans: num_channels
    osr: '1'
    samp_delay: '0'
    taps: firdes.low_pass_2(1.0,1,1/num_channels/2,(1/num_channels)*0.1,80,window.WIN_BLACKMAN_HARRIS)
  states:
    bus_sink: false
    bus_source: true
    bus_structure: null
    coordinate: [448, 916.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: 2,1,1,1
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Transmitted OFDM Burst"'
    nconnections: '1'
    size: int(head_size/time_steps)
    srate: wide_samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '64'
    ymin: '-64'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1312, 292.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: sensing_stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1312, 468.0]
    rotation: 0
    state: enabled
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: sensing_stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 940.0]
    rotation: 0
    state: enabled

connections:
- [analog_noise_source_x_0, '0', blocks_add_xx_0, '0']
- [blocks_add_xx_0, '0', blocks_tag_gate_0, '0']
- [blocks_add_xx_0, '0', fosphor_qt_sink_c_0, '0']
- [blocks_add_xx_0, '0', qtgui_time_sink_x_0_0, '0']
- [blocks_add_xx_0, '0', virtual_sink_0, '0']
- [blocks_complex_to_mag_squared_0, '0', epy_block_1, '0']
- [blocks_head_0, '0', blocks_throttle_0, '0']
- [blocks_streams_to_vector_0, '0', blocks_complex_to_mag_squared_0, '0']
- [blocks_tag_gate_0, '0', ofdm_rx_hier_0, '0']
- [blocks_throttle_0, '0', blocks_add_xx_0, '1']
- [epy_block_0, rx_cent_freq, ofdm_rx_hier_0, cent_freq]
- [epy_block_0, tx_cent_freq, ofdm_tx_hier_0, cent_freq]
- [epy_block_1, energy_vec, blocks_message_debug_0, print]
- [ofdm_rx_hier_0, '0', blocks_null_sink_0, '0']
- [ofdm_tx_hier_0, '0', blocks_head_0, '0']
- [ofdm_tx_hier_0, '0', epy_block_0, '0']
- [ofdm_tx_hier_0, '1', blocks_null_sink_0_0, '0']
- [pfb_channelizer_ccf_1_0, '8', blocks_streams_to_vector_0, '8']
- [virtual_source_0, '0', pfb_channelizer_ccf_1_0, '0']

metadata:
  file_format: 1
  grc_version: 3.9.6.0-rc1
